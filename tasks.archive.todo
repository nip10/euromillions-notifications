✔ Add model @done(18-11-06 11:47)
  Schema:
    - Email (user email)
    - MinPrize (integer)
    - Token { value: string, expiresAt: date }
✔ Move to constants @done(18-11-17 20:11)
  ✔ Error messages @done(18-11-17 20:01)
  ✘ Success messages @cancelled(18-11-17 20:11)
  ✔ min/max prize values @done(18-11-17 20:07)
      currently .min(15).max(300)
  ✔ token expiration duration @done(18-11-17 20:11)
      currently 1 day dt.setDate(dt.getDate() + 1);
  ✔ After setting thiu up, compare the api responses with the constants @done(18-11-17 20:11)
      Basically, uncomment the lines that look like
          expect(res.body.error).toBe(THE_CONSTANT);
✔ Create interface for notificationObj @done(18-11-11 00:23)
✔ Add travisci @done(18-11-17 20:01)
✔ Show coverage on github @done(18-11-17 19:50)
✔ Show build status on github @done(18-11-17 19:50)
✔ Add env vars to Travis @done(18-11-17 19:50)
    Tests are failing because they are undefined
✔ Test Joi validation errors @done(18-11-11 00:23)
  I may need to do some custom validation messages if Joi's arent that great
  I ended up using my own error messages.
✔ Add route @done(18-11-06 11:47)
  ✔ POST / @done(18-11-06 11:47)
      Create new notification
      ✔ Add controller @done(18-11-08 00:37)
          ✔ createNotification @done(18-11-08 00:37)
              ✔ Should receive email AND minPrize @done(18-11-06 11:47)
                  ✔ Add validation @done(18-11-06 11:47)
              ✔ Should check if the email exists @done(18-11-06 12:31)
                  Try to insert and see what happens
              ✔ Should save that data in the db @done(18-11-06 12:31)
              ✔ Should respond with 201/400/500 @done(18-11-06 12:31)
              ✔ Should send an email with welcome message @done(18-11-08 00:37)
                  ✔ Setup email template in Sendgrid @done(18-11-08 00:37)
  ✔ POST /editnotification @done(18-11-17 22:37)
      This should send an email with a token
      ✔ Add controller @done(18-11-17 22:37)
          ✔ sendEditNotificationEmail @done(18-11-17 22:37)
              ✔ Should receive email @done(18-11-08 00:52)
              ✔ Should generate a new token @done(18-11-08 00:52)
                  ✔ Figure out how to add the token to the db @done(18-11-11 00:29)
                      Needs two fields: token and createdAt or expiresAt
                      Can be added to the current collection or a new one
                      Figure out if mongo has some feature to autodelete a document based on a timestamp.
                      This would make it easier to delete an unused and invalid token.

                      Ended up adding a token field that is an object with 2 keys (value, expiresAt)
                      Expired unused tokens must be deleted using a cronjob or something like that
              ✔ Should send email with link for GET /editnotification/:token @done(18-11-17 22:37)
  ✔ POST /deletenotification @done(18-11-17 22:37)
      This should send an email with a token
      ✔ Add controller @done(18-11-17 22:37)
          ✔ sendDeleteNotificationEmail @done(18-11-17 22:37)
              ✔ Should receive email @done(18-11-11 01:05)
              ✔ Should generate a new token @done(18-11-11 01:06)
              ✔ Should send email with link for GET /deletenotification/:token @done(18-11-17 22:37)
  ✔ PATCH /editnotification/:token/:minPrize @done(18-11-11 01:10)
      Edit minPrize
      ✔ Add controller @done(18-11-11 01:06)
          ✔ editNotification @done(18-11-11 01:06)
              ✔ Should receive token and minPrize @done(18-11-11 00:30)
                  ✔ Add validation @done(18-11-11 00:30)
              ✔ Should update db data @done(18-11-11 01:06)
              ✔ Should respond with 200/400 @done(18-11-11 01:06)
  ✔ DELETE /deletenotification/:token @done(18-11-11 01:07)
      Delete notification
      ✔ Add controller @done(18-11-11 01:07)
          ✔ deleteNotification @done(18-11-11 01:07)
              ✔ Should receive token @done(18-11-11 01:07)
                  ✔ Add validation @done(18-11-11 01:07)
              ✔ Should update db data (remove notification) @done(18-11-11 01:07)
              ✔ Should respond with 200/400 @done(18-11-11 01:07)