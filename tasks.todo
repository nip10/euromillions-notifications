☐ Replace any's
☐ Simplify pages
    There's a lot of duplicated code
    Move the common stuff (title, github corner) to App and render children there
    Pass the components as the children
☐ Move res.locals to req.locals ?
☐ Move routes from server to client
    It doesn't make sense to have the edit/delete get requests, since they are on the api and not on the client side
    Run validation on the url itself, assume the email and token is valid, and then validate server side

    To use the form itself, the router needs to pass in props for formType
    Also, the formtype needs to be set (in state) before mounting the component
☐ Add success messages
☐ Add error handling
    ☐ When creating a notification
    ☐ When editing a notification
    ☐ When deleting a notification
☐ Change form types to enum
☐ Consider sending the welcome email in the background and allow the process to continue
    Since this email is just for saying welcome and basic information, it's not critical if the user
    doesn't receive it ?
☐ Allow multiple currencies
☐ Create interface for email variables
    variables: any
☐ Add logger
    ☐ Log stuff
☐ Fix prettier not working with ts
☐ Test sending an email to an invalid email
☐ Figure out the differences between mongoose.connection.dropDatabase() and mongoose.connection.db.dropDatabase();
    In setting up tests
        This works:
            await mongoose.connection.dropDatabase();
        This does NOT work:
            await mongoose.connection.db.dropDatabase();
☐ Add script (cron)
    ☐ Run after drafts
        Allow a few hours for the rss to update
    ☐ Get email addresses that have a minPrize lower than the current prize
    ☐ Send an email to everyone
        ☐ Make a template in Sendgrid
☐ Consider adding a Sinon spy on the all the email functions
Info:
  - rss-parser
  - santa casa rss